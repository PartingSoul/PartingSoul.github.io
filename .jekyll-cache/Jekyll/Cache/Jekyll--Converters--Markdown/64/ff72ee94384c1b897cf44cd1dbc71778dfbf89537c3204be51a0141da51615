I"]N<h3 id="一-概述">一. 概述</h3>

<p>​	上篇文章介绍了AIDL的基本用法，AIDL主要用于进程间的通信，但是AIDL需要在服务端处理线程安全问题并且AIDL的使用方式比较复杂。</p>

<p>​	这里引出Messenger，Messenger同样可以用于进程间的通信，它的底层实现也是通过AIDL，但却是一个轻量级的实现方式，使用起来比AIDL简单。由于它一次只能处理一个请求，因此服务端不需要考虑线程安全问题。</p>

<h3 id="二-用法">二. 用法</h3>

<p>Messenger是通过Handler和Message的方式进行进程间的通信。</p>

<p>使用Message传递的数据为arg1、arg2、what、Bundle。obj只能传递系统的Parcelable的对象，无法传递自定义的Parcelable对象。</p>

<p>例如现在需要将客户端的信息传送到服务端</p>

<h4 id="21-服务端代码编写">2.1 服务端代码编写</h4>

<ul>
  <li>创建一个Service</li>
  <li>创建一个Handler用于接收处理消息</li>
  <li>创建一个Messenger用于通信</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MessengerService</span> <span class="kd">extends</span> <span class="nc">Service</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">Messenger</span> <span class="n">mMessenger</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Messenger</span><span class="o">(</span><span class="k">new</span> <span class="no">H</span><span class="o">());</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">IBinder</span> <span class="nf">onBind</span><span class="o">(</span><span class="nc">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">mMessenger</span><span class="o">.</span><span class="na">getBinder</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="kd">class</span> <span class="nc">H</span> <span class="kd">extends</span> <span class="nc">Handler</span> <span class="o">{</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
            <span class="kd">super</span><span class="o">.</span><span class="na">handleMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
            <span class="nc">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">"msg = "</span> <span class="o">+</span> <span class="n">msg</span><span class="o">.</span><span class="na">what</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<h4 id="22-客户端代码编写">2.2 客户端代码编写</h4>

<ul>
  <li>绑定远程服务，同时获取服务端的Messenger</li>
  <li>使用服务端的Messenger将消息发送至服务端</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MessengerActivity</span> <span class="kd">extends</span> <span class="nc">AppCompatActivity</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">isBound</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">Messenger</span> <span class="n">mServiceMessenger</span><span class="o">;</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="nd">@Nullable</span> <span class="nc">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
        <span class="n">setContentView</span><span class="o">(</span><span class="no">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">act_messenger</span><span class="o">);</span>

        <span class="c1">// 绑定服务</span>
        <span class="nc">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Intent</span><span class="o">();</span>
        <span class="n">intent</span><span class="o">.</span><span class="na">setClassName</span><span class="o">(</span><span class="s">"com.parting_soul.server"</span><span class="o">,</span> <span class="s">"com.parting_soul.server.MessengerService"</span><span class="o">);</span>
        <span class="n">bindService</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">mServiceConnection</span><span class="o">,</span> <span class="nc">Context</span><span class="o">.</span><span class="na">BIND_AUTO_CREATE</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onDestroy</span><span class="o">()</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onDestroy</span><span class="o">();</span>
        <span class="n">unbindService</span><span class="o">(</span><span class="n">mServiceConnection</span><span class="o">);</span>
        <span class="n">isBound</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="nc">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(!</span><span class="n">isBound</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="k">switch</span> <span class="o">(</span><span class="n">view</span><span class="o">.</span><span class="na">getId</span><span class="o">())</span> <span class="o">{</span>
            <span class="k">case</span> <span class="no">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">bt_send_message</span><span class="o">:</span>
                <span class="n">sendMessage</span><span class="o">();</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="k">default</span><span class="o">:</span>
                <span class="k">break</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">sendMessage</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="nc">Message</span><span class="o">.</span><span class="na">obtain</span><span class="o">();</span>
            <span class="n">message</span><span class="o">.</span><span class="na">what</span> <span class="o">=</span> <span class="mi">123</span><span class="o">;</span>
            <span class="n">mServiceMessenger</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
            <span class="nc">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">"service = "</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">RemoteException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="nc">ServiceConnection</span> <span class="n">mServiceConnection</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ServiceConnection</span><span class="o">()</span> <span class="o">{</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onServiceConnected</span><span class="o">(</span><span class="nc">ComponentName</span> <span class="n">name</span><span class="o">,</span> <span class="nc">IBinder</span> <span class="n">service</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">"service connected"</span><span class="o">);</span>
            <span class="n">isBound</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            <span class="n">mServiceMessenger</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Messenger</span><span class="o">(</span><span class="n">service</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onServiceDisconnected</span><span class="o">(</span><span class="nc">ComponentName</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">isBound</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">};</span>
  
<span class="o">}</span>
</code></pre></div></div>

<h4 id="23-服务端给客户端传送消息">2.3 服务端给客户端传送消息</h4>

<p>如果在服务端接收客户端消息后，服务端需要给客户端应答，此时就需要利用Message的replyTo属性。</p>

<ul>
  <li>首先是需要创建处理服务端消息的Handler以及客户端对应的Messenger，服务端可以利用该Messenger给客户端传递消息</li>
  <li>在客户端给服务端发送消息时，同时要在消息中添加自己的Messenger信息</li>
</ul>

<p>客户端</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="nc">Messenger</span> <span class="n">mClientMessenger</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Messenger</span><span class="o">(</span><span class="k">new</span> <span class="nc">ClientHandler</span><span class="o">());</span>

<span class="kd">static</span> <span class="kd">class</span> <span class="nc">ClientHandler</span> <span class="kd">extends</span> <span class="nc">Handler</span> <span class="o">{</span>
  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">"接收到服务端的消息"</span><span class="o">);</span>
    <span class="k">switch</span> <span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">what</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">case</span> <span class="mi">200</span><span class="o">:</span>
        <span class="nc">Bundle</span> <span class="n">bundle</span> <span class="o">=</span> <span class="n">msg</span><span class="o">.</span><span class="na">getData</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">result</span> <span class="o">=</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"data"</span><span class="o">);</span>
        <span class="nc">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
        <span class="k">break</span><span class="o">;</span>
      <span class="k">default</span><span class="o">:</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>发送消息</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="kt">void</span> <span class="nf">sendAndReceiveMessage</span><span class="o">()</span> <span class="o">{</span>
  <span class="k">try</span> <span class="o">{</span>
    <span class="nc">Message</span> <span class="n">message</span> <span class="o">=</span> <span class="nc">Message</span><span class="o">.</span><span class="na">obtain</span><span class="o">();</span>
    <span class="n">message</span><span class="o">.</span><span class="na">what</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
    <span class="c1">//设置自己的Messenger</span>
    <span class="n">message</span><span class="o">.</span><span class="na">replyTo</span> <span class="o">=</span> <span class="n">mClientMessenger</span><span class="o">;</span>

    <span class="c1">//传递序列化对象</span>
    <span class="nc">Bundle</span> <span class="n">bundle</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Bundle</span><span class="o">();</span>
    <span class="n">bundle</span><span class="o">.</span><span class="na">putParcelable</span><span class="o">(</span><span class="s">"data"</span><span class="o">,</span> <span class="k">new</span> <span class="nc">Book</span><span class="o">(</span><span class="s">"Android 书籍"</span><span class="o">,</span> <span class="s">"技术"</span><span class="o">));</span>
    <span class="n">message</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">bundle</span><span class="o">);</span>

    <span class="n">mServiceMessenger</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">RemoteException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>服务端：接收消息后返回成功信息</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
  <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"what = "</span> <span class="o">+</span> <span class="n">msg</span><span class="o">.</span><span class="na">what</span> <span class="o">+</span> <span class="s">" 接收到消息"</span><span class="o">;</span>
  <span class="k">switch</span> <span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">what</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
      <span class="k">break</span><span class="o">;</span>
    <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
      <span class="nc">Bundle</span> <span class="n">bundle</span> <span class="o">=</span> <span class="n">msg</span><span class="o">.</span><span class="na">getData</span><span class="o">();</span>
      <span class="c1">//反序列化前需要设置ClassLoader</span>
      <span class="n">bundle</span><span class="o">.</span><span class="na">setClassLoader</span><span class="o">(</span><span class="nc">Book</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">());</span>
      <span class="nc">Book</span> <span class="n">book</span> <span class="o">=</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getParcelable</span><span class="o">(</span><span class="s">"data"</span><span class="o">);</span>
      <span class="n">str</span> <span class="o">+=</span> <span class="s">" "</span> <span class="o">+</span> <span class="n">book</span><span class="o">;</span>
      
      <span class="c1">//得到客户端的Messenger</span>
      <span class="nc">Messenger</span> <span class="n">clientMessenger</span> <span class="o">=</span> <span class="n">msg</span><span class="o">.</span><span class="na">replyTo</span><span class="o">;</span>
      <span class="n">replyToClient</span><span class="o">(</span><span class="n">clientMessenger</span><span class="o">);</span>

      <span class="k">break</span><span class="o">;</span>
    <span class="k">default</span><span class="o">:</span>
  <span class="o">}</span>
  <span class="nc">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
<span class="o">}</span>

<span class="c1">//返回信息至客户端</span>
<span class="kd">private</span> <span class="kt">void</span> <span class="nf">replyToClient</span><span class="o">(</span><span class="nc">Messenger</span> <span class="n">clientMessenger</span><span class="o">)</span> <span class="o">{</span>
  <span class="k">try</span> <span class="o">{</span>
    <span class="nc">Bundle</span> <span class="n">bundle</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Bundle</span><span class="o">();</span>
    <span class="n">bundle</span><span class="o">.</span><span class="na">putString</span><span class="o">(</span><span class="s">"data"</span><span class="o">,</span> <span class="s">"接收成功"</span><span class="o">);</span>
    <span class="nc">Message</span> <span class="n">newMsg</span> <span class="o">=</span> <span class="nc">Message</span><span class="o">.</span><span class="na">obtain</span><span class="o">();</span>
    <span class="n">newMsg</span><span class="o">.</span><span class="na">what</span> <span class="o">=</span> <span class="mi">200</span><span class="o">;</span>
    <span class="n">newMsg</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">bundle</span><span class="o">);</span>
    <span class="n">clientMessenger</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">newMsg</span><span class="o">);</span>
  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">RemoteException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

:ET